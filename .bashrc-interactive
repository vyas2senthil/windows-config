#!/bin/bash

if test "$EMACS" != t -a -e /etc/bash_completion; then
    . /etc/bash_completion
fi

for x in ~/.bash_completion.d/*; do 
    . "$x"
done

function cd_bhj () 
{
    local oldpwd=`pwd`
    local ok=1 # 1 means not ok
    lcd "$@" && return $?

    test $# == 1 -o $# == 0 && builtin cd "$@" >/dev/null 2>&1 || cd_failed "$@" && ok=0 # 0 means ok
    return $ok
}

function cd_failed() 
{
    local IFS=$'\n'
    dirs=( $(where "$@") )
    if test ${#dirs[@]} = 0; then
        echo 'Error: no such file or directory'
        return 1
    elif test ${#dirs[@]} = 1; then
        builtin cd ${dirs[0]}
    else 
        NUM=`my_select "${dirs[@]}"`
        ((NUM--))
        builtin cd "${dirs[$NUM]}"
    fi
    return 0
}

function fcd() 
{
    local IFS=$'\n'
    dirs=( $(find . -iname "*$1*") )
    if test ${#dirs[@]} = 0; then
        echo 'Error: no such file or directory'
        return 1
    elif test ${#dirs[@]} = 1; then
        cd_bhj ${dirs[0]}
    else 
        NUM=`my_select "${dirs[@]}"`
        ((NUM--))
        cd_bhj "${dirs[$NUM]}"
    fi
}

function wcd() 
{
    local IFS=$'\n'
    dirs=( "$@" )
    if test ${#dirs[@]} = 0; then
        echo 'Error: no such file or directory'
        return 1
    elif test ${#dirs[@]} = 1; then
        cd_bhj ${dirs[0]}
    else 
        NUM=`my_select "${dirs[@]}"`
        ((NUM--))
        cd_bhj "${dirs[$NUM]}"
    fi
}

function fedit() 
{
    local IFS=$'\n'
    local line=
    if [[ "$1" =~ :[0-9]+:?$ ]]; then
	line=:$(echo "$1"|perl -npe 's/.*:(\d+):?$/$1/')
	set -- "$(echo "$1"|perl -npe 's/:(\d+):?$//')"
    fi
    dirs=( $(find . -iname "*$1*") )
    if test ${#dirs[@]} = 0; then
        echo 'Error: no such file or directory'
        return 1
    elif test ${#dirs[@]} = 1; then
        edit ${dirs[0]}$line
    else 
        NUM=`my_select "${dirs[@]}"`
        ((NUM--))
        edit "${dirs[$NUM]}"$line
    fi
}

function rbcd()
{
    dirs=(`repo branches|perl -npe 's/.* in\b.//; s/,/ /g; s/ /\n/g'|sort -u`);
    NUM=`my_select "${dirs[@]}"`
    ((NUM--))
    cd_bhj "${dirs[$NUM]}"
}

function re()
{
    echo 'error: re should never be executed!'
}

function rex()
{
    command rex "$@" ~/.bash_history.bak
}

function rcd() {
    if test $# = 0; then
	cd .repo/manifests
    else
	scd "$@"
    fi
}

if test -e ~/.bashrc-interactive-$USER; then
    . ~/.bashrc-interactive-$USER
fi
