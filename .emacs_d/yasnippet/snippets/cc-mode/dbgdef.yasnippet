# -*- mode: snippet -*-
# name: dbgdef
# --
#define debug(fmt, ...) do {			\
	fprintf(stderr,				\
		"%s %s() %d: " fmt "\n",	\
		strrchr(__FILE__, '/')		\
		? strrchr(__FILE__, '/') + 1	\
		: __FILE__,			\
		__FUNCTION__, __LINE__,		\
		##__VA_ARGS__);			\
	fflush(stderr);				\
 } while(0)

#define envdebug(fmt, ...) do {						\
	if (getenv("DEBUG") && strcmp(getenv("DEBUG"), "true") == 0) {	\
	    fprintf(stderr,						\
		    "%s %s() %d: " fmt "\n",				\
		    strrchr(__FILE__, '/')				\
		    ? strrchr(__FILE__, '/') + 1			\
		    : __FILE__,						\
		    __FUNCTION__, __LINE__,				\
		    ##__VA_ARGS__);					\
	    fflush(stderr);						\
	}								\
    } while(0)

#define ddebug(a) do {				\
	debug(#a " is %d", (a));		\
 } while(0)

#define xdebug(a) do {				\
	debug(#a " is 0x%x", (a));              \
 } while(0)

#define die(fmt, ...) do {			\
	debug(fmt, ##__VA_ARGS__);		\
	exit(-1);				\
 } while(0)

#define ASSERT_EQUAL(a,b) do {					\
	if ((a) != (b)) {					\
	    debug("error: %s is not equal to %s\n ", #a,  #b);  \
	    exit(-1);						\
	} else {						\
	    debug("OK: %s is equal to %s\n", #a, #b);		\
	}							\
    } while (0)

#define die_if(cond) do {						\
	if (cond) {							\
	    debug("error: condition %s is true, need to die\n", #cond); \
	    exit(-1);							\
	}								\
    } while (0)

#define ASSERT_NOT_EQUAL(a,b) do {				\
	if ((a) == (b)) {					\
	    debug("error: %s is equal to %s\n", #a, #b);	\
	    exit(-1);						\
	} else {						\
	    debug("OK: %s is not equal to %s\n", #a, #b);	\
	}							\
    } while (0)
