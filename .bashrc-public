#!/bin/bash
export PATH=/home/bhj/external/bin/linux/ext/android-sdk-linux_86/tools/ndk/android-ndk-r4b:$HOME/bin/:$PATH:/home/bhj/bin/linux/ext/arm-eabi-4.4.0/bin:/home/bhj/external/bin/linux/ext/arm-2010q1/bin:/home/bhj/external/bin/linux/ext/arm-linux-4.1.1/bin
export PROMPT_COMMAND="history -a"
export EDITOR=edit-wait

if test -z "$SSH_CLIENT"; then
    HOSTNAME=`hostname`
    export PS1='\n[01;34m{ [01;31m'`whoami`'[01;34m@[01;33m'$HOSTNAME'[01;34m [01;32m'\$PWD'[01;34m }[0m\n\$'
else
    export LOCALIP=`echo $SSH_CONNECTION|awk '{print $3}'|sed -e 's/.*://'`
    export LOCALPORT=`echo $SSH_CONNECTION|awk '{print $4}'`
    export WHOAMI=`whoami`
    export REMOTEIP=`echo ${SSH_CLIENT} | awk '{print $1}'|perl -npe 's/.*://'`
    export DISPLAY=${DISPLAY:-$REMOTEIP:0.0}
    export PS1HostName=`hostname`
    export PS1='\n( \u@$PS1HostName [01;32m| \w |[0m [01;34mRemote[01;31m:[01;34mTrue[0m )\n\$'
    alias sudoedit='WHOAMI=root edit'
    if test "$TERM" = dumb; then
        export PS1='\$'
    fi
fi

alias rm='rm -i'
alias mkgtags='mkgtags -i -v'
alias bcd=cd_beagle
alias pcd='builtin cd -P'

cd_beagle() 
{
    if test $# = 1; then
	dir=$(readlink -f "$1")
	cd ~/tmp/for-code-reading/chm/"$dir"
	return
    fi

    dest=~/tmp/for-code-reading/`pwd`
    while test ! -d "$dest"/.beagle -a ! -e "$dest"/GPATH -a "$dest" != / -a "$dest" != ""; do
        dest=${dest%/*};
    done
    if test "$dest" = / -o "$dest" = ""; then
        echo 'You have not run for-code-reading yet, please run it first!'
        return 1;
    else
        cd_ok "$dest"
        return 0
    fi
}

cd_ok()
{
    builtin cd "$@"
    history -s cd "$PWD"
    return 0
}

cd_record()
{
    if [[ "$PWD" =~ ^$HOME/smb/ ]]; then
        local pat=$HOME/smb/
        local rep=smb://
        history -s cd "${PWD/$pat/$rep}"
    else
        history -s cd "$(printf %q "`pwd`")"
    fi
   (flock -x ~/.where.lock -c where&)
}



git()
{
    if test "`readlink -f .`" = "`readlink -f ~`" -a "$1" != clone
    then
        (cd ~/windows-config/; command git "$@")
    else
        command git "$@"
    fi            
}

rbranch()
{
    repo forall . -c 'echo $REPO_RREV'
}

if tty -s; then
    stty -ixon -ixoff >/dev/null 2>&1
fi

if test -n "$BASH_VERSION" -a "$BASH" = /bin/bash; then
    . ~/.bashrc-public-bash
fi

scd()
{
    history -s scd "$@"
    cd "$(readlink -f "${2:-.}"|perl -npe "$1")"
}
