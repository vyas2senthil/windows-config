#!/bin/bash
export PATH=~/bin/:$PATH
export PROMPT_COMMAND="history -a"

if test -z "$SSH_CLIENT"; then
    HOSTNAME=`hostname`
    export PS1='\n[01;34m{ [01;31m'`whoami`'[01;34m@[01;33m'$HOSTNAME'[01;34m [01;32m'\$PWD'[01;34m }[0m\n\$'
else
    export LOCALIP=`echo $SSH_CONNECTION|awk '{print $3}'|sed -e 's/.*://'`
    export LOCALPORT=`echo $SSH_CONNECTION|awk '{print $4}'`
    export WHOAMI=`whoami`
    export REMOTEIP=`echo ${SSH_CLIENT} | awk '{print $1}'|perl -npe 's/.*://'`
    export DISPLAY=${DISPLAY:-$REMOTEIP:0.0}
    export PS1HostName=`hostname`
    export PS1='\n( \u@$PS1HostName [01;32m| \w |[0m [01;34mRemote[01;31m:[01;34mTrue[0m)\n\$'

    function edit()
    {
        if [[ $WHOAMI == root ]] && [[ -f "$1" ]]; then
            echo using root to do edit, won\'t check read permission
        else
            if ! [[ -r "$1" ]]; then
                echo Error: "$1" is not readable
                return 1
            fi
            if ! [[ -w "$1" ]]; then
                echo Warning: "$1" is not writable
            fi
        fi    

        local file=$( readlink -f "$1" )
        ~/bin/edit.pl "$file"
    }

    alias sudoedit='WHOAMI=root edit'

fi

alias rm='rm -i'
function svn-info-clip()
{
    svn info "$1" |grep '^URL:'|sed -e 's/^URL: //; s/^https/http/'|tr -d '\r\n' | putclip
}

function lcd()
{
    if test $# != 1; then
        return 1
    elif test $1 = -; then
        builtin cd -; 
        return 0
    fi
    

    if test "${1:0:2}" = '\\' -a `uname` = Linux; then
        smbnetfs ~/smb >/dev/null 2>&1
        builtin cd ~/smb/$(echo "$1"|perl -npe 's,\\,/,g')
        return 0
    fi

    local ori=$1
    local x=0
    while ! test -e "$1" >/dev/null && ((x++ < 10)); do 
        set -- ../"$1";
    done

    if ! test -e "$1" >/dev/null; then
        _ucd $ori
        return $?
    fi

    link=$(readlink -f "$1")
    if test -f "$link" && echo "${link##*.}"|grep -i '^lnk$' -q; then 
            link=`readshortcut "$link"`
    fi
    if test -d "$link"; then
        if test "$link" = `pwd`; then
            return 1;
        fi
        builtin cd "$link"
        (flock -x ~/.where.lock -c where&)
        return $?
    else
        builtin cd "$(dirname "$link")"
        (flock -x ~/.where.lock -c where&)
        return $?
    fi
}

function _ucd() #we go to upper dir which match the $1, for ex, cd 'ho' in /home/bhj will go to /home, 
{
    local x=0
    dir=`dirname $(pwd)`
    dir_basename=`basename $dir`
    while ! echo $dir_basename|grep -e $1 -i -q && ((x++ < 10)); do
        dir=`dirname $dir`
        dir_basename=`basename $dir`
    done
    if test x$dir = x/; then #obviously, we very not likely want to go to / with this complex setup
        return 1;
    fi
    builtin cd $dir
    (flock -x ~/.where.lock -c where&)
    return $?
}

function git()
{
    if test `pwd` = ~
    then
        (cd ~/windows-config/; command git "$@")
    else
        command git "$@"
    fi            
}

stty -ixon -ixoff >/dev/null 2>&1
