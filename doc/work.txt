insmod /data/proc_i2c.ko

function ri2c() {
         x=$3
         for y in `seq 1 ${4:-1}`; do 
             echo read adap $1 addr $2 reg $x byte 1 > /proc/i2c_rw
             ((x++));
         done
}

while true; do ri2c 0x0 0x03 0x0 10; done

function wi2c() {
         echo write adap $1 addr $2 reg $3 byte 1 val $4 > /proc/i2c_rw
}

function bi2c() {
         echo read adap 3 addr 0x4 block 10 > /proc/i2c_rw
}

sudo ./nvflash --bl bootloader.bin --download 4 bootloader.bin --go
sudo ./nvflash --bl bootloader.bin --download 6 boot.img --go

git config --add remote.origin.pushurl `git config remote.origin.url|perl -npe "s,.*//.*?/,bhj\@192.168.0.46:/,"`
sudo bash -c 'echo 0 >/proc/sys/net/ipv4/tcp_timestamps'
sudo aptitude purge ~ilinux-image-2.*\(\!`uname -r`\)
for x in `git tag`; do git branch tagbr-$x $x; done

mkdir /data/debugfs
mount -t debugfs null /data/debugfs
cat /data/debugfs/gpio
(cd .repo/.. && export TARGET_PRODUCT=harmony; export USB_GADGET_MODULE_PATH=kernel/drivers/usb/gadget/; . build/envsetup.sh ; for x in `echo '$TARGET_BUILD_APPS $TARGET_BUILD_TYPE $TARGET_BUILD_VARIANT $TARGET_PRODUCT $TARGET_SIMULATOR'|sed -e 's/\\$//g'`; do echo export $x=`eval echo \\$$x`; done >TARGET_PRODUCT)
M-: (modify-syntax-entry ?_ "w")

(. build/envsetup.sh ; adb forward tcp:5039 tcp:5039; export PATH=`pwd`/prebuilt/linux-x86/toolchain/arm-eabi-4.4.0/bin:$PATH; gdbclient sensor-daemon)
(export TARGET_PRODUCT=harmony; export USB_GADGET_MODULE_PATH=kernel/drivers/usb/gadget/; . build/envsetup.sh ; adb forward tcp:5039 tcp:5039; export PATH=`pwd`/prebuilt/linux-x86/toolchain/arm-eabi-4.4.0/bin:$PATH; gdbclient sensor-daemon)
gdbserver :5039 /system/bin/test-sensor
gdbserver --attach :5039 `pidof sensor-daemon`

git@www.rayzertrack.com:nv/android/manifest
git@www.rayzertrack.com:ggl/pxa935/platform/manifest.git -b cupcake-rayzerlink
git@www.rayzertrack.com:ggl/pxa935/platform/manifest.git -b rayzerlink-opl
psql -c "INSERT INTO projects (use_contributor_agreements  ,submit_type  ,name) VALUES ('N' ,'M' ,'pxa935/tools/repo');" nvidiadb
psql -c "INSERT INTO projects (use_contributor_agreements  ,submit_type  ,name) VALUES ('N' ,'M' ,'vendor/rayzerlink');" nvidiadb

perl -ne 'if (2..2) {print "set -ex\n" } print;'

# $Id: minirc.dfl,v 1.1.1.1 2003/03/30 18:55:39 al-guest Exp $
# Machine-generated file - use "minicom -s" to change parameters.
pr port	/dev/com4
pu baudrate 115200
pu bits 8
pu parity N
pu stopbits 1
pu minit
pu mreset
pu mconnect
pu rtscts No

mount -w -o remount /dev/block/mtdblock7 /data
mount -t nfs 192.168.8.1:/home/bhj/src/benz3g/cupcake/out/target/product/generic/system /system&
./write_block -2 0x600000  ./ramdisk /dev/block/mtdblock5
dd if=/dev/block/mtdblock5 bs=1048576 skip=6 count=4 of=r2
dd if=/data/ramdisk bs=1048576 seek=6 count=4 of=/dev/block/mtdblock5 #for test

dd if=/data/ramdisk bs=1048576 seek=2 count=4 of=/dev/block/mtdblock5
dd of=/ramdisk bs=1048576 count=4 skip=2 if=/dev/block/mtdblock5
dd if=/data/zImage  bs=1048576 of=/dev/block/mtdblock5
dd if=/data/blob  bs=524288 seek=1 count=1 of=/dev/block/mtdblock0
tr '\000' '\377' < /dev/zero|dd bs=131072 of=/dev/block/mtdblock6 count=10


mkdir /system; mount -t yaffs2 /dev/block/mtdblock6 /system/; cd /system; nc -l -p 8892|tar zxv
tar czv . |nc phone 8892



mkdir /opl; mount -t yaffs2 /dev/block/mtdblock7 /opl/; cd /opl
nc -l -p 8888 > /data/arbel
cat Arbel_NVM_SAC_NOCOMMRTC.bin |nc phone 8888
dd if=/data/arbel bs=1048576  of=/dev/block/mtdblock2


mkdir /data; mount -t yaffs2 /dev/block/mtdblock13 /data; cd /data
nc -l -p 8888 > /data/tavor
cat Tavor_M05_Poleg_AI_B0_Flash.bin |nc phone 8888
dd if=/data/tavor bs=1048576 seek=7  of=/dev/block/mtdblock2

nc -l -p 8893 |tar zxv
tar czv . |nc phone 8893

cat /dev/zero|

echo shit|awk 'BEGIN{for (i=0; i<1024; i++) {y=y "\xff" }} { while (1) print y}'|tr -d '\r\n' > /dev/block/mtdblock7
mount -t yaffs2 /dev/block/mtdblock7 /opl

export DO_SERVICE=true; exec /init2

replace init.rc
(cd .repo/..; export TARGET_PRODUCT=harmony; export USB_GADGET_MODULE_PATH=kernel/drivers/usb/gadget/; . build/envsetup.sh; time make -j 8 )
(cd .repo/..; export TARGET_PRODUCT=ventana; export USB_GADGET_MODULE_PATH=kernel/drivers/usb/gadget/; . build/envsetup.sh; time make -j 8 )
(cd .repo/.. && export TARGET_PRODUCT=ventana; export USB_GADGET_MODULE_PATH=kernel/drivers/usb/gadget/; . build/envsetup.sh ; for x in `echo '$TARGET_BUILD_APPS $TARGET_BUILD_TYPE $TARGET_BUILD_VARIANT $TARGET_PRODUCT $TARGET_SIMULATOR'|sed -e 's/\\$//g'`; do echo export $x=`eval echo \\$$x`; done >TARGET_PRODUCT)
/mnt/mysql /var/lib/mysql none bind 0 0
ssh -C2qN -D 8080 bhj@216.194.70.6

1. 
    apt-get install mediawiki* ( very important are the extensions and math )
    ln -s /var/lib/mediawiki /var/www

2. in /etc/mediawiki/apache.conf

    Alias /wiki /var/lib/mediawiki/index.php

3. in /etc/mediawiki/LocalSettings.php

$wgArticlePath      = "/wiki/$1";  # Virtual path. This directory MUST be different from the one used in $wgScriptPath
$wgUsePathInfo      = true;        # Enable use of pretty URLs
$wgUseTeX           = true;
$wgTexvc            = "/usr/bin/texvc";

$wgUseTidy = true;
$wgTidyBin = '/usr/bin/tidy';   
$wgTidyConf = $IP.'/extensions/tidy/tidy.conf';

$wgForeignFileRepos[] = array(
   'class'                   => 'ForeignAPIRepo',
   'name'                    => 'shared',
   'apibase'                 => 'http://commons.wikimedia.org/w/api.php',
   'fetchDescription'        => true, // Optional
   'descriptionCacheExpiry'  => 43200, // 12 hours, optional (values are seconds)
   'apiThumbCacheExpiry'     => 43200, // 12 hours, optional, but required for local thumb caching
);

4. 

    sudo mkdir /var/lib/mediawiki/images/math
    sudo chown www-data\: /var/lib/mediawiki/images/math

5. 

    svn co http://svn.wikimedia.org/svnroot/mediawiki/trunk/mwdumper mwdumper
    cd mwdumper
    ant jar

6. download enwiki-latest-pages-articles.xml.bz2

    lftp -c "pget -n 15 http://download.wikimedia.org/enwiki/latest/enwiki-latest-pages-articles.xml.bz2"

7. 

    java -server -jar mwdumper.jar --format=sql:1.5 /e/bhj/enwiki-latest-pages-articles.xml.bz2 |mysql --user=wikiuser --password=xxxx wikidb -f


############# config ##################
#
# set base_path    /var/spool/apt-mirror
#
# set mirror_path  $base_path/mirror
# set skel_path    $base_path/skel
# set var_path     $base_path/var
# set cleanscript $var_path/clean.sh
# set defaultarch  <running host architecture>
# set postmirror_script $var_path/postmirror.sh
# set run_postmirror 0
set nthreads     20
set _tilde 0
#
############# end config ##############

deb-i386 http://archive.ubuntu.com/ubuntu/ lucid main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ lucid main restricted universe multiverse

deb-i386 http://ppa.launchpad.net/ubuntu-wine/ lucid main 
deb http://ppa.launchpad.net/ubuntu-wine/ lucid main 

deb-i386 http://ftp.us.debian.org/debian sid main contrib non-free
deb-i386 http://ftp.us.debian.org/debian testing main contrib non-free
deb-i386 http://ftp.us.debian.org/debian stable main contrib non-free
deb-src http://ftp.us.debian.org/debian sid main contrib non-free

clean http://archive.ubuntu.com/ubuntu
clean http://ftp.us.debian.org/debian
clean http://ppa.launchpad.net/ubuntu-wine

for x in `git branch -r`; do git diff $x 2>&1|grep diff -q || echo $x; done
sudo ./nvflash --bl bootloader.bin --download 6 boot.img --go
sudo ./nvflash --bl bootloader.bin --download 4 bootloader.bin --go

(find-file
 (let ((file 
        (replace-regexp-in-string "android-byd" "rayzerlink-ventana" (my-buffer-file-name (current-buffer)))))
   (if (file-exists-p (replace-regexp-in-string "harmony" "ventana" file))
       (replace-regexp-in-string "harmony" "ventana" file)
     (if (file-exists-p (replace-regexp-in-string "harmony" "template" file))
         (replace-regexp-in-string "harmony" "template" file)
       (setq file (replace-regexp-in-string "harmony" "ventana" file))
       
       (if (file-exists-p (replace-regexp-in-string "e1162" "pm275" file))
           (replace-regexp-in-string "e1162" "pm275" file)
         (message "Error: can not find your file in ventana")
         file)))))

(find-file
 (let ((file 
        (replace-regexp-in-string "rayzerlink-ventana" "android-byd" (my-buffer-file-name (current-buffer)))))
   (if (file-exists-p (replace-regexp-in-string "harmony" "ventana" file))
       (replace-regexp-in-string "harmony" "ventana" file)
     (if (file-exists-p (replace-regexp-in-string "harmony" "template" file))
         (replace-regexp-in-string "harmony" "template" file)
       (setq file (replace-regexp-in-string "harmony" "ventana" file))
       
       (if (file-exists-p (replace-regexp-in-string "e1162" "pm275" file))
           (replace-regexp-in-string "e1162" "pm275" file)
         (message "Error: can not find your file in ventana")
         file)))))



.local/share/applications/mimeapps.list
make -C ./vendor/broadcom/bcm4329/src/dhd/linux \
        LINUXDIR=/home/bhj/src/rayzerlink-ventana/out/target/product/ventana/obj/KERNEL \
        LINUXVER=2.6.32 CROSS_COMPILE=/home/bhj/src/android-byd/prebuilt/linux-x86/toolchain/arm-eabi-4.4.0/bin/arm-eabi- ARCH=arm OEM_ANDROID=1 dhd-cdc-sdmmc-gpl-debug
insmod /data/dhd.ko "firmware_path=/data/sdio-cdc-g-11n-mfgtest-seqcmds.bin nvram_path=/data/nvram.txt"
insmod /system/lib/hw/wlan/bcm4329.ko "firmware_path=/system/lib/hw/wlan/fw_bcm4329.bin nvram_path=/system/lib/hw/wlan/nvram.txt iface_name=wlan"

