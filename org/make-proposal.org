Hi, all

To speed up Marvell's android system build, I want to propose the
following improvements to our build system: a) enable parallel build
for all components and b) enable the use of ccache.

These changes are mainly focused on Marvell proprietary projects such
as uboot/obm/modules/kernel. Those projects using Android.mk has no
problem with these 2 goals.

I have pushed some review requests for this proposal, you can visit
them here: [[http://shgit.marvell.com/r/#q,owner:hjbao+status:open,n,z][my review requests]].

* Make them all support parallel build

  Currently only the Kernel supports parallel build, the others does
  not.

  Even the kernel's parallel build support is defected; if you want a
  job number other than the default 4, you must use:

  #+begin_example
  export MAKE_JOBS=n
  cd kernel; make
  #+end_example

  This is annoying, we should be able to use the Make program's
  default behavior:
  
  #+begin_example
  make -j n -C kernel
  #+end_example

** Why did we not support it?

   Because we are using recursive make for these Marvell projects. The
   dependency is very difficult to get correct in recursive make. That
   is why Android has avoided it altogether. See [[http://www.google.com/search?q=recursive+make+considered+harmful][recursive make considered harmful]].

** How to fix it?

   There are 2 things.

   - Get the dependencies right.

     Kernel has no problem with dependencies.

     I have fixed some dependency issues for modules.
 
     I have fixed some dependency issues for telephony.

   - Use + and $(MAKE) in Makefiles.

     For the recursive make to take advantage of parallel build job
     server, you need write a '+' at the beginning of each *recursive*
     make rule, and write ~$(MAKE)~ instead of ~make~ directly. See
     the Make info page.

     Fortunately this can be easily done with a script, I have
     provided one, it is attached (fix-mk.pl).


* Make them all support use of ccache

  With the use of ccache, a full build of kernel (~make clean; make -j4~) can speed up from 10 minutes to a bare 2 minutes compared to
  when ccache is not used.

  This speed up is too good to be ignored. Android supports [[http://source.android.com/source/building.html#using-ccache][ccache]] itself.

** Why did we not support it?

   There is a defect in our Makefiles: the ~CROSS_COMPILE~ variable is
   *both* ~export~-ed and passed to a recursive make on the command
   line. The second caused it impossible to use ccache because it
   would introduce a space in the ~CROSS_COMPILE~ variable and cause
   the command line fail to parse.


** How to fix it?

   Do not pass the ~CROSS_COMPILE~ on the command line. It's unnecessary
   anyway, since it is already ~export~-ed.
   
