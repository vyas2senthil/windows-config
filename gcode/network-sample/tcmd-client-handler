#!/bin/bash
read -a cmd -s -r #read will notice the \r at eol and count it if testing with
		  #telnet(1), so please use nc(1).
function driver_die() {
    local x=$?
    echo "$@"
    if test -z "$x" -o "$x" = 0; then
	x=-1
    fi
    echo ret: $x
    exit "$x"
}

function die() {
    local x=$?
    echo "$@"
    if test -z "$x" -o "$x" = 0; then
	x=-1
    fi
    exit "$x"
}

export -f die #for use in sub scripts


if test ${#cmd[@]} = 0; then
    driver_die 'You have not specified the command to execute!'
fi

cd /system/etc/tcmd || driver_die "system not correctly setup, can not cd to /system/etc/tcmd"

test -e ./"${cmd[0]}" || driver_die "command ./${cmd[0]} not found"
#       ^^note this, so that the client can not use an absolute path to create a
#       security hole.

bash ./"${cmd[@]}" && { echo ret: 0; exit 0; }
echo ret: $?
exit -1
