<Type Name="RequestMessage" FullName="Beagle.RequestMessage">
  <TypeSignature Language="C#" Value="public abstract class RequestMessage : Beagle.Message" />
  <AssemblyInfo>
    <AssemblyName>Beagle</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Beagle.Message</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestMessage ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Default contructor.</summary>
        <!--<remarks></remarks>-->
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestMessage (bool keepalive);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="keepalive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keepalive">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public event Beagle.RequestMessage.Closed ClosedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Beagle.RequestMessage+Closed</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keepalive">
      <MemberSignature Language="C#" Value="public bool Keepalive { set; get; };" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAsyncResponseHandler">
      <MemberSignature Language="C#" Value="public void RegisterAsyncResponseHandler (Type t, Beagle.RequestMessage.AsyncResponseHandler handler);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="handler" Type="Beagle.RequestMessage+AsyncResponseHandler" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterTransport">
      <MemberSignature Language="C#" Value="public void RegisterTransport (Beagle.Transport transport);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transport" Type="Beagle.Transport" />
      </Parameters>
      <Docs>
        <param name="transport">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public Beagle.ResponseMessage Send ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Beagle.ResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncBlocking">
      <MemberSignature Language="C#" Value="public void SendAsyncBlocking ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Beagle.Transport&gt; Transports { get; };" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Beagle.Transport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Types">
      <MemberSignature Language="C#" Value="public static Type[] Types { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAsyncResponseHandler">
      <MemberSignature Language="C#" Value="public void UnregisterAsyncResponseHandler (Type t);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterTransport">
      <MemberSignature Language="C#" Value="public void UnregisterTransport (Beagle.Transport transport);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transport" Type="Beagle.Transport" />
      </Parameters>
      <Docs>
        <param name="transport">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestMessage (Beagle.Transport transport);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="transport" Type="Beagle.Transport" />
      </Parameters>
      <Docs>
        <param name="transport">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>An abstract class representing any kind of message sent to the service.</summary>
    <remarks>This class encapsulates the different kinds of ways messages can be sent to the service. </remarks>
  </Docs>
</Type>
