# jira(1) completion

_jira_compgen_options()
{
    local IFS=$'\t\n'
    local options=(--help --action --file --debug --verbose --server --user --password password --login --service --loginFromStandardInput --project --toProject --name --description description --url --lead --after --issue --toIssue --parent --summary --priority priority --reporter --assignee --environment environment --components --affectsVersions --fixVersions --custom --field --date date --dateFormat --type --resolution --step --comment --filter --link --values --count --outputFormat --plugin plugin --version --role --group --defaultGroup --userId --userFullName userFullName --userEmail --userPassword --permissionScheme --notificationScheme notificationScheme --issueSecurityScheme --findReplace --autoVersion --autoComponent --autoGroup --asVersion --asComponent)

    COMPREPLY=( $(skeleton_compgen_word.pl -- "$( echo ${options[@]} )" "$cur") )
}

_jira_components()
{
    local components=(
        Unknown Apps-3rd "HW debug"
        Apps-Backup Apps-Browser Apps-Calc 
        Apps-Calendar Apps-Clock Apps-Contact
        Apps-Ebook Apps-EMail Apps-FileManager 
        Apps-Gallery Apps-Home Apps-InputMethod 
        Apps-News Apps-Search Apps-Setting 
        Apps-Update Apps-Widget Boot 
        Connectivity-Bluetooth Connectivity-Ethernet/ADSL Connectivity-GPS 
        Connectivity-Wifi Framework Framework-GUI 
        GMS Hardware Multimedia 
        OS OS-FileSystem OS-PowerManagement 
        OS-Sensor OS-Update Service-Search 
        Service-Update Telephony Tools 
        Vendor
    )

    COMPREPLY=( $(skeleton_compgen_word.pl -- "$( echo ${components[@]} )" "$cur") )
}

_jira_issue_types()
{
    local IFS=$'\t\n'
    local types=(
        Bug
        "New Feature"
        Task
        Improvement
        Epic
        Story
        "Test Task"
    )
    
    COMPREPLY=( $(skeleton_compgen_word.pl -d '\n' -- "$(for x in ${types[@]}; do echo $x; done)" "$cur") )
}

_jira_complete_these_words()
{
    local IFS=$'\t\n'

    COMPREPLY=( $(skeleton_compgen_word.pl -d '\n' -- "$(for x in "$@"; do echo $x; done)" "$cur") )
}

_jira_file_list()
{
    local IFS=$'\t\n'
    COMPREPLY=( $(skeleton_compgen_word.pl -d '\n' -- "$(cd "$1"; 'ls')" "$cur") )
}

_jira_actions()
{
        
    local actions=(login logout getServerInfo createProject deleteProject getProjectList addVersion addComponent deleteComponent copyComponents createIssue updateIssue linkIssue addComment addAttachment progressIssue getIssue getFieldValue setFieldValue getAvailableSteps getIssueList getCommentList getComments getAttachment getAttachmentList addUser addUserWithFile removeUser removeUserWithFile addGroup removeGroup addUserToGroup addUserToGroupWithFile removeUserFromGroup removeUserFromGroupWithFile getUserList getPluginList getPluginDownload)
    
    COMPREPLY=( $(skeleton_compgen_word.pl -- "$( echo ${actions[@]} )" "$cur") )
}

_jira_issue_list()
{

    local cur prev IFS=$' \t\n'

    COMPREPLY=()
    _get_comp_words_by_ref cur prev
    _jira_file_list ~/jira-issues/
    return 0
}

_jira_add_comment()
{

    local cur prev IFS=$' \t\n'

    COMPREPLY=()
    _get_comp_words_by_ref cur prev
    case $COMP_CWORD in
        1)
            _jira_file_list ~/jira-issues/
            ;;
    esac
    return 0
}

_jira()
{
    local cmd cur prev skinsdir IFS=$' \t\n' i j k=0

    COMPREPLY=()
    cmd=${COMP_WORDS[0]}
    _get_comp_words_by_ref cur prev

    case $prev in
        -a|--action)
            _jira_actions
            return 0
            ;;
        --issue)
            _jira_file_list ~/jira-issues/
            return 0
            ;;
        --project)
            _jira_file_list ~/jira-projects/
            return 0
            ;;
        --assignee)
            _jira_file_list ~/jira-users/
            return 0
            ;;
        --components)
            _jira_components
            return 0
            ;;
        --type)
            _jira_issue_types
            return 0
            ;;
        --resolution)
            _jira_complete_these_words "Fixed" "Won't Fix" "Duplicate" "Incomplete" "Cannot Reproduce" "Not a Bug"
            return 0
            ;;            
        --priority)
            _jira_complete_these_words Blocker Critical Major Minor Trivial
            return 0
            ;;
    esac

    case $cur in
        -*)
            _jira_compgen_options
            return 0
            ;;
    esac

    return 0
}


complete -o filenames -F _jira jira jira-help.pl
complete -o filenames -F _jira_issue_list jira-comments
complete -o filenames -F _jira_add_comment jira-add-comment

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
