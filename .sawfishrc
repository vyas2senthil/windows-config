(load-file "~/.sawfish/iswitch-window.jl")
(bind-keys global-keymap "H-s" 'iswitch-window)


(bind-keys global-keymap "H-C-i" (lambda () (system "~/bin/linux/screenshot&")))
(bind-keys global-keymap "H-r" (lambda () (system "grun&")))
(bind-keys window-keymap "H-i" (lambda () (display-message (concat "Window class is: " (window-class (input-focus))))))


(defun bhj-activate-window (window)
  (if (window-iconified-p window)
      (uniconify-window window))
  (activate-window window))


(defun find-window-or-exec (wclass #!optional wcommand)
  (if (eq (catch 'wFound
            (mapc (lambda (window)
                    (if (string-match wclass (window-class window) 0 t)
                        (progn 
                          (bhj-activate-window window)
                          (throw 'wFound 'wFound))))
                  (stacking-order)))
          'wFound)
      nil
    (if wcommand
        (system (concat wcommand "&")))))

(mapc
 (lambda (args)
   (let ((key (car args))
         (wclass (cadr args))
         (wcommand (caddr args)))
     (bind-keys global-keymap key
                (lambda ()
                  (find-window-or-exec wclass wcommand)))))
 '(
   ("H-e" "Emacs" "emacs.bhj")
   ("H-p" "Gnome-terminal" "gnome-terminal --hide-menubar -e ~/bin/myscr")
   ("H-a" "Acroread\|Evince" "acroread")
   ("H-n" "Firefox" "firefox")
   ))

(mapc 
 (lambda (arg)
   (let ((wclass nil) (wmark nil))
     (bind-keys global-keymap (concat "C-M-" (format nil "%d" arg))
                (lambda ()
                  (setq wmark (input-focus))
                  (setq wclass (window-class (input-focus)))))
     (bind-keys global-keymap (concat "H-" (format nil "%d" arg))
                (lambda ()
                  (if (and  (windowp wmark) (window-mapped-p wmark))
                      (bhj-activate-window wmark)
                    (if wclass
                        (find-window-or-exec wclass)))))))
 '(0 1 2 3 4 5 6 7 8 9))

(bind-keys global-keymap "H-k" (lambda () (system "emacsclient.emacs-snapshot -n ~/doc/work.txt&")))


(bind-keys global-keymap "H-d"
           (lambda ()
             (if (not (showing-desktop-p))
                 (show-desktop)
               (hide-desktop))))

(setenv "XMODIFIERS" "@im=SCIM")
(setenv "XIM" "SCIM")
(setenv "GTK_IM_MODULE" "scim")
(setenv "TZ" "Asia/Shanghai")
(setenv "LANG" "en_US.UTF-8")
(setenv "LC_ALL" "en_US.UTF-8")
(setenv "PATH" (concat 
                (getenv "HOME") "/bin:" 
                (getenv "HOME") "/bin/linux:" 
                (getenv "HOME") "/bin/linux/ext:" 
                (getenv "HOME") "/home/bhj/bin/linux/ext/android-sdk-linux_86/tools:"
                (getenv "PATH")))
(setenv "CLASSPATH" (concat
                     "/usr/local/jdk1.5/lib:"
                     (getenv "HOME") "/bin/linux/ext/stringtemplate.jar:"
                     (getenv "HOME") "/bin/linux/ext/antlr3.jar:"
                     (getenv "HOME") "/bin/linux/ext/antlrworks.jar:."))


(if (boundp 'ProgramsStarted)
      nil ;; Sawfish has already started those Programs
  (setq ProgramsStarted t)
  (system "for x in ~/.sawfish/start/*; do ($x&); done"))






