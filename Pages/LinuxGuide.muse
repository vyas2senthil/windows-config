#title 谈编程
#author Bao Haojun <haojun.bao@borqs.com>

<contents>

一般的软件工程师在学习编程的过程中,会碰到很多陷阱,如果不注意的话,会浪费
很多时间.在这里我谈一下自己的一些切身体会,希望对有着类似困惑的人有些帮
助.


* 学得太多; 干得太少

或许是中国的应试教育制度问题, 很多人喜欢从书本里寻找答案. 我自己就是这
样, 看过很多很多软件编程相关的书了, 却没有写过什么很好的程序. 而且看书
还有个毛病, 一定要从头看到尾, 生怕漏掉一句话.

这简直是在浪费生命. 完全不考虑成本, 不考虑代价, 认为时间是无限的, 只要
我不停的看下去, 总有一天我会成为编程高手. 现实是残酷的, 我已经看了12年
了, 现在也还没成为高手.

应该多编程, 少看书. 完全不看书也是不可能的, 有时候一定要看. 但是必须把
实干和看书有机的结合起来, 互相促进. 看了太多书的时候, 要停下来想想, 是
不是该实践一下了; 编了太多程的时候, 尤其是碰到瓶颈的时候, 也停下来想想,
是不是该找本书看看, 上Google查查, 找个人问问.

从这里看到, 很重要的一件事, 其实也是很平常的一个事, 就是要平衡好两者之
间的关系. 平衡. 请记住这个词, 你在这篇文章里还会看到很多次.

从另一个角度来说, 学多干少是一种懦夫的行为. 不敢自己去探索,去研究, 碰到
问题先想着自己的书看得不够, 要再回去看够了才去解决问题. 菜都凉了书还没
看完, 那怎么行.

我想外国人编程高手多与他们从小培养自己动手解决问题能力有很大关系.

* 不知道怎么学

与上面的问题关系非常密切, 甚至可说是互为因果的一个问题, 就是很长一段时
间我不知道怎么学. 怎样学才算好的学法呢? 

答案其实很简单, 就是问题本身. 在不知道这是个问题--什么是好的学习方法--
的时候, 我们认为所有的学法都是好的学法. 只要学了, 就是好的. 考试就能考
高分, 老师就会表扬你.

当你认识到这是个问题的时候, 你就已经找到了答案. 孔子说, 吾一日三省吾身,
其实就是每天问自己三遍同一个问题: 我的方法够好了吗?

软件工程的最经典著作, <<人月神话>>的作者说, 银弹(Sivler Bullet, 英语俚
语, 指能解决一切问题的万能药, 万金油)是不存在的. 其实是一个意思, 所有
的方法, 如果敢声称它就是唯一的那个好的方法, 肯定是忽悠.

记住, 好的方法就是每天都问自己, 现在的方法好吗? 有问题吗? 做到这一点,
就达到了CMMI最高级别, CMMI5的定义是: 持续的不断改进的软件开发流程.

死抱着一个方法不肯变化的人, 就像一个20岁了还要母乳喂养的人. 这样的人是
不可思议的.

引用毛泽东的矛盾论的说法, 矛盾总是在不断运动, 发展, 变化的, 主要矛盾和
次要矛盾在一定条件下还会互相转化. 显然方法也必须是随着矛盾的变化而变化.

用武侠小说中的话说, 无招才能胜有招.

* 要懂矛盾论

矛盾论是我唯一读过的毛泽东的著作, 所以我认为也是他最伟大的著作. 读了之
后第一次真正的认识到, 毛泽东是伟人啊. 不但道理讲得深刻, 文采也是好得不
得了.

孔子说, 吾一日三省吾身, 完全是在向毛泽东致敬. 其实他就是每天问自己三遍
同一个问题: 我分清主要次要矛盾了吗?

编程和任何其他人类活动一样, 充满着矛盾. 深刻理解, 灵活运用矛盾论, 有助
于你在软件开发中做到游刃有余, 而不是顾此失彼.

比如, 需求分析. 对客户有核心价值的功能, 和核心之外的功能, 互相成为矛盾.
什么功能一定要有, 什么功能可以有, 什么功能不能有, 也是矛盾.

前面说的学和干, 也是矛盾. 想起来了, 孟子也向毛致过敬, 学而不思思而不学
嘛.

外国人提出过一条``百分之二十和百分之八十''的法则, 也跟矛盾论很像哦.

* 计算机基础科学

操作系统, 编译原理, 软件工程. 这三门课以前学起来好难, 其实真的很简单.
你只要能回答几个问题就行了: 它们讲得都是什么呀? 它们为什么要存在呀?

还有一个非常重要的东西, 就是编辑器. Emacs or VIM. 我个人推荐Emacs. 千
万不要过度依赖任何IDE.

为什么呢? 答案就是问题本身.
