#!/bin/bash

set -e

jobs=5
dirs=()
debug=0
TEMP=$(getopt -o xd:j: -n $(basename $0) -- "$@")
function die() {
    echo "$@"
    exit -1
}

export -f die

eval set -- "$TEMP"
while true; do
    case "$1" in
	-x)
	    debug=1
	    shift
	    ;;
	-j)
	    jobs=$2
	    shift 2
	    ;;
	-d)
	    dirs=("${dirs[@]}" "$2")
	    shift 2
	    ;;
	--)
	    shift
	    break
	    ;;
	*)
	    die "internal error"
	    ;;
    esac
done

if test "${#dirs[@]}" = 0; then
    dirs=(
	$(
            (
                xmlstarlet sel -B -t -m //project -v @path -n $(lookup_file .repo/manifest.xml)
                if test -e "$(lookup_file .repo/local_manifest.xml 2>/dev/null)"; then
                    xmlstarlet sel -B -t -m //project -v @path -n $(lookup_file .repo/local_manifest.xml)
                fi
            ) | sort -u
        )
    )
else
    dirs=(
	$(
	    for x in "${dirs[@]}"; do
		if test -d "$x"; then
		    repo forall "$x" -c 'echo $REPO_PATH'
		elif test -f "$x"; then
		    cat "$x" | pn 1 | sort -u
		else
		    die "Error: not a dir: $x"
		fi
	    done
	)
    )
fi
job=0

cd $(lookup_file .repo/..)
test -d .repo

export ANDROID_TOP=$(pwd)

(cd .repo; make -f ~/etc/generate-repo-info.mk) >/dev/null 2>&1 
export REPO_INFO=$(pwd)/.repo/repo_info.pl

function die() {
    echo "$@"
    exit -1
}

export -f die
mkdir -p ~/.logs/my-rfa-locks
for x in "${dirs[@]}"; do 
    job=$((job + 1))
    job=$((job % jobs))
    (
	(
	    cd $x || exit
	    flock -x 9
	    x=
	    if test "$debug" = 1; then
		x=-x
	    fi
	    bash $x -c "$@"
	) 9>~/.logs/my-rfa-locks/$job.lock &
    )
done | tee ~/.logs/my-rfa.log
