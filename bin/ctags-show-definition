#!/usr/bin/perl

use strict;

if (@ARGV != 3) {
    die "Error: Usage $0 FILE LINE DEFWORD";
}

my ($file, $target_line, $target_def) = @ARGV;

chomp(my $lang = qx(lang_for_file $file));
open(my $ctags_pipe, "-|", "ctags-exuberant --c-kinds=+p --language-force=$lang -xu $file")
    or die "Error: can not open ctags pipe";

open(my $debug, ">", glob("~/.logs/ctags-show-definition.log")) or
    die "Error: can not open ~/.logs/ctags-show-definition.log, please run 'mkdir ~/.logs'";

sub debug(@) {
    print $debug "@_\n";
}

debug "$0 @ARGV";

my %line_def_map;
my %matching_def_map;
while (<$ctags_pipe>) {
    my ($def, $type, $line) = split;
    debug "got def: $def, type: $type, line: $line";
    $line_def_map{$line} = [$def, $type];

    if ($def eq $target_def) {
	debug "got matching $def on $line";
	$matching_def_map{$line} = [$def, $type];
    }
}

$target_line = (sort {abs($a - $target_line) <=> abs($b - $target_line)} keys %matching_def_map)[0];

debug "target_line changed to $target_line";

exit unless $target_line;
my ($start_line, $end_line) = (1, 1000000);
for my $line (sort {$a <=> $b} keys %line_def_map) {
    debug "checking $line";
    if ($line > $target_line) {
	$end_line = $line;
	last;
    }
    $start_line = $line;
}

if ($end_line > $start_line) {
    $end_line = $end_line - 1;
}

my $should_dot = 0;
if ($end_line > $start_line + 10) {
    $end_line = $start_line + 10;
    $should_dot = 1;
}
debug "start is $start_line, end is $end_line";
system("perl -ne 'print \"    \$.: \$_\" if $start_line..$end_line' $file");
print "    ...\n" if $should_dot;
