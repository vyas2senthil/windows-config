#!/bin/bash
function git()
{

    (
	if test "$(readlink -f .)" = "$(readlink -f ~)" -a "$1" != clone || 
            test "$(readlink -f .)" = "$(readlink -f ~/windows-config/)"
	then
            cd ~/windows-config/;
            if test "$1" = st; then
                for x in ~/src/github/*/; do
                    if test -d $x; then
                        (
                            cd $x
                            
                            y=$(git st -s)
                            if test "$y"; then
                                echo $x not clean 1>&2 
                                git st -s
                                echo ---------------- 1>&2 
                            fi
                            y=$(git diff --name-status origin/master)
                            if test "$y"; then
                                echo $x not clean 1>&2 
                                git diff --name-status origin/master
                                echo ---------------- 1>&2 
                            fi
                        )
                    fi
                done
            fi

            if test "$1" = submodule -a "$2" = foreach -a $# = 3; then
                for x in ~/src/github/*/; do
                    if test -d $x; then
                        (
                            cd $x
                            $3
                        )
                    fi
                done
            fi
	fi

	if test "$1" = st -a "$2" = -S; then
	    command git status -s | perl -ne '
chomp(); 
$_ = substr($_, 3); 
if (m/^"/) { 
    $_ = eval($_);
}
print $_ . "\n";
'
	  exit
	fi
        if test "$1" = clean; then
            if command git st -s | grep '??'; then
                echo Warning: git not clean, will not clean it
                if yes-or-no-p -n "Continue?"; then
                    true;
                else
                    echo Please use: command git clean -xfd
                    exit -1
                fi
            fi
        fi
    
	command git "$@"
    )

}
