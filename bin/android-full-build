#!/bin/bash

. ~/.bashrc
build_env=`lookup_file build/envsetup.sh`
top_dir=`dirname $build_env`
top_dir=`readlink -f $top_dir/..`
set -e
jobs=3 #default
TEMP=$(getopt -o j: -n $(basename $0) -- "$@")
function die() {
    echo "$@"
    exit -1
}

eval set -- "$TEMP"
while true; do
    case "$1" in
	-j)
	    jobs=$2
	    shift 2
	    ;;
	--)
	    shift
	    break
	    ;;
	*)
	    die "internal error"
	    ;;
    esac
done

cd $top_dir || exit
. build/envsetup.sh >/dev/null 2>&1

if test $# != 0 -a $# != 1; then
    die "Usage: $(basename "$0") [lunch-combo]"
fi

if test $# = 1; then
    lunch "$1"
    export OUT_DIR_LONG=out-$TARGET_PRODUCT-$TARGET_BUILD_VARIANT
    export OUT_DIR=$(echo -n $OUT_DIR_LONG|md5sum|cut -b 1-3)
    if test -e $OUT_DIR -a "$(readlink -m $OUT_DIR)" != "$(readlink -m $OUT_DIR_LONG)"; then
	x=0
	while test -e $OUT_DIR.$x; do
	    ((x++))
	done
	OUT_DIR=$OUT_DIR.$x
    fi
    export OUT_DIR=$OUT_DIR
    relative-link "$OUT_DIR_LONG" "$OUT_DIR"
    android-set-product
fi

(cd $(android-env get_abs_build_var TARGET_OUT) >/dev/null 2>&1 && rm ../system.img ../obj/PACKAGING/systemimage_intermediates/system.img -v) || true
test -e buildspec.mk || { echo no buildspec.mk, will exit now; exit; }

(
    touch .for-code-reading
    echo 'about to lock at '$(date)
    flock 9 || { echo 'lock failed at'$(date); exit -1; }
    echo 'lock success! at'$(date)
    echo -n 'before build, ccache size is '
    du -s -h ~/.ccache/
    echo external dirs not managed by repo:
    repo-external
    result=''
    command time make kernel && result=$result'kernel ok; '
    command time make -j$jobs -l$jobs -k && result=$result'android ok; '
    command time make telephony uboot obm && result=$result'misc ok; '
    echo "$result"
    echo -n 'after build, ccache size is '
    du -s -h ~/.ccache/
) 9>~/.logs/android-full-build.lock  2>&1 | tee build.log
