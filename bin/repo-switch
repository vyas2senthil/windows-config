#!/bin/bash
set -e

repo_init_url=
repo_init_branch=
repo_init_manifest=
repo_url=

TEMP=$(getopt -o esu:b:m:r:ip --long repo-url: -n $(basename $0) -- "$@")
eval set -- "$TEMP"
interactive=0
while true; do
    case "$1" in
        -u)
            repo_init_url=$2
            shift 2
            ;;
        -b)
            repo_init_branch=$2
            shift 2
            ;;
        -m)
            repo_init_manifest=$2
            shift 2
            ;;
        -r|--repo-url)
            repo_url=$2
            shift 2
            ;;
        -i)
            interactive=1
            shift
            ;;
        -p)
            cat $(lookup-file .repo/repo-switch)
            exit 0
            ;;
        -e)
            edit .repo/repo-switch
            exit 0
            ;;
        -s)
            output="$(select-output-line bash -c 'for x in .repo/repo-switch*; do
                                                      cat $x 2>/dev/null
                                                      echo
                                                  done|uniq-even-non-ajacent')"
            if test "$output"; then
                echo "$output" > .repo/repo-switch
            fi
            exit 0
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done


repodir=$(lookup-file -e .repo)
if test -z "$repodir"; then
    (set -x; repo init -p auto -u ${repo_init_url:-bibler:shgit/manifest}\
        -m ${repo_init_manifest:-default.xml}\
        -b ${repo_init_branch:-master}\
        --repo-url=${repo_url:-https://gerrit.googlesource.com/git-repo}\
        "$@")
fi

repodir=$(lookup-file -e .repo)
if test -e "$repodir"/repo-switch && grep '^export' -q "$repodir"/repo-switch; then
    . "$repodir"/repo-switch

    old_repo_init_url=
    old_repo_init_branch=
    old_repo_init_manifest=
    old_repo_url=

    TEMP=$(getopt -o u:b:m:r: -n $(basename $0) -- "${repo_init_args[@]}")
    eval set -- "$TEMP"
    while true; do
        case "$1" in
            -u)
                old_repo_init_url=$2
                shift 2
                ;;
            -b)
                old_repo_init_branch=$2
                shift 2
                ;;
            -m)
                old_repo_init_manifest=$2
                shift 2
                ;;
            -r)
                old_repo_url=$2
                shift 2
                ;;
            --)
                shift
                break
                ;;
            *)
                die "internal error"
                ;;
        esac
    done
fi

if test -z "$repo_init_url"; then
    if test $interactive = 1; then
        echo The repo init url to use:
        repo_init_url=$(select-output-line bash -c "echo $old_repo_init_url; cat ~/.repoconfig/repo_init_urls 2>/dev/null")
    else
        repo_init_url=${old_repo_init_url:-bibler:shgit/manifest}
    fi
fi

if test -z "$repo_init_branch"; then
    if test $interactive = 1; then
        echo The repo init branch to use:
        repo_init_branch=$(select-output-line bash -c "echo $old_repo_init_branch; (cd $(lookup-file .repo/manifests) && git branch -a | pn 1 | perl -npe 's!remotes/.*?/!!' | sort -u)")
    else
        repo_init_branch=${old_repo_init_branch:-master}
    fi
fi

if ! tty >/dev/null 2>&1; then
    repo_init_manifest=${old_repo_init_manifest:-default.xml}
fi

if test -z "$repo_init_manifest" || ! [[ "$repo_init_manifest" =~ \.xml$ ]]; then
    if test $interactive = 1 || ! [[ "$repo_init_manifest" =~ \.xml$ ]]; then
        echo The repo manifest to use:
        if test -n "$repo_init_manifest"; then
            manifest_pattern="(m!$repo_init_manifest! and not m!manifest_backup/!)"
        else
            manifest_pattern="m/./";
        fi
        repo_init_manifest=$(select-output-line bash -c "echo $old_repo_init_manifest;
                                                         (cd $(lookup-file .repo/manifests) && 
                                                          find . -name '*.xml' | 
                                                          perl -npe 's!^\./!!' | 
                                                          perl -ne 'print if $manifest_pattern')")
    else
        repo_init_manifest=${old_repo_init_manifest:-default.xml}
    fi
fi

if test -z "$repo_url"; then
    if test $interactive = 1; then
        echo The repo url to use:
        repo_url=$(select-output-line bash -c "(echo $old_repo_url; cat ~/.repo_urls 2>/dev/null)|uniq-even-non-ajacent")
    fi
fi

(echo $repo_init_url; cat ~/.repoconfig/repo_init_urls 2>/dev/null) | uniq-even-non-ajacent > ~/.repoconfig/repo_init_urls.bak
mv ~/.repoconfig/repo_init_urls.bak ~/.repoconfig/repo_init_urls


(
    echo $repo_url;
    cat ~/.repo_urls 2>/dev/null
) |uniq-even-non-ajacent > ~/.repo_urls.$$
mv ~/.repo_urls.$$ ~/.repo_urls

cd "$repodir"
test -d manifests

cp -av $(readlink -f manifest.xml) manifest.xml.old || true
rm manifest.xml || true

mkdir -p local_manifests/
if test -e local_manifests/local_manifist.xml; then
    mv local_manifests/local_manifist.xml local_manifests/local_manifist.xml.2
fi

cd manifests
git co HEAD^
for x in `git branch|grep -v '^\*'`; do git branch -D $x; done

(
    set -x;
    (
        cd $(lookup-file .repo/repo)
        git config remote.origin.url $repo_url
    )
    repo init -u $repo_init_url -b $repo_init_branch -m $repo_init_manifest --repo-url=$repo_url -p auto "$@"
)

cd ..

if test -x repo-init-hook; then
    ./repo-init-hook
fi

if test -e local_manifests/local_manifist.xml.2; then
    mv -v local_manifests/local_manifist.xml.2 local_manifests/local_manifist.xml
fi

(
    printf 'export repo_init_args=('
    for x in -u $repo_init_url -b $repo_init_branch -m $repo_init_manifest -r $repo_url -- "$@"; do 
        printf ' %q' "$x";
    done
    printf ')'
) > $(
    if test -e repo-switch; then
        seq=$(
            if test -e .repo-switch.seq; then
                cat .repo-switch.seq;
            else
                echo -1
            fi
        )
        ((seq++, seq %= 10))
        echo $seq > .repo-switch.seq
        cp repo-switch repo-switch.$seq
    fi
    echo repo-switch
)

if ! diff -q manifest.xml manifest.xml.old; then
    touch .need_rebuild
fi

cd $(lookup-file .repo/repo)
(

    if grep -P -e '\Qnodes.append(self._ParseManifestXml(local_file, self.repodir))\E' manifest_xml.py; then
    patch -p1 <<EOF
diff --git a/manifest_xml.py b/manifest_xml.py
index 0664eff..46c91f4 100644
--- a/manifest_xml.py
+++ b/manifest_xml.py
@@ -346,7 +346,7 @@ class XmlManifest(object):
         for local_file in sorted(os.listdir(local_dir)):
           if local_file.endswith('.xml'):
             try:
-              nodes.append(self._ParseManifestXml(local_file, self.repodir))
+              nodes.append(self._ParseManifestXml(os.path.join(self.repodir, LOCAL_MANIFESTS_DIR_NAME, local_file), self.repodir))
             except ManifestParseError as e:
               print('%s' % str(e), file=sys.stderr)
       except OSError:
EOF
fi
) || true
echo ok.
