#!/usr/bin/perl

use strict;
use XML::Parser;
use File::Path qw(make_path);

my $parse = new XML::Parser();
$parse->setHandlers(Start=>\&handler_start, End=>\&handler_end, Comment=>\&handler_comment,);
chomp(my $file = qx(readlink -f $ARGV[0]));

my $dir = ($ARGV[1] or "$file.dir");
make_path $dir;
chdir $dir or die "Can not chdir $dir";
$parse->parsefile($file);

sub handler_start
{
    my($parser,$element,%attr)=@_;

    if ($element eq "AudioPath") {
	if (keys %attr < 1 or not $attr{"identifier"}) {
	    my @attr = %attr;
	    die sprintf "AudioPath error: attr: '%s'", @attr;
	}
	make_path $attr{"identifier"};
	chdir $attr{"identifier"} or die "Can not chdir $attr{identifier}";
	delete $attr{"identifier"};
	create_attrs(\%attr);
    } elsif ($element eq "Operation") {
	if (keys %attr != 1 or not $attr{"identifier"}) {
	    die "Operation error";
	}
	make_path $attr{"identifier"};
	chdir $attr{"identifier"} or die "Can not chdir $attr{identifier}";
    } elsif ($element eq "AudioComponent") {
	if(keys %attr != 2 or not $attr{"identifier"}) {
	    die "AudioComponent error";
	}
	make_path $attr{"identifier"};
	chdir $attr{"identifier"} or die "Can not chdir $attr{identifier}";
	delete $attr{"identifier"};
	create_attrs(\%attr);
    } elsif ($element eq "Register") {
	if(keys %attr < 1 or not $attr{"field"}) {
	    my @attr = %attr;
	    die sprintf "Register error: hash %s, keys %d, field %s, value: '%s'", @attr, keys %attr, $attr{"field"}, defined $attr{"value"};
	}
	make_path $attr{"field"};
	chdir $attr{"field"} or die "Can not chdir $attr{field}";
	delete $attr{"field"};
	if (defined $attr{"misc"}) {
	    make_path "misc=" . $attr{"misc"};
	    chdir "misc=" . $attr{"misc"} or die "can not enter misc";
	    delete $attr{"misc"};
	    create_attrs(\%attr);
	    chdir "..";
	} else {
	    create_attrs(\%attr);
	}
    } else {
	make_path $element;
	chdir $element or die "can not chdir $element";
	create_attrs(\%attr);
    }
}

sub create_attrs(\%)
{
    my ($attr) = @_;
    
    foreach my $key (keys %{$attr}) {
	open(my $file, ">", $key) or
	    die "can not open file $key";
	print $file $$attr{$key};
	close($file);
    }
}

sub handler_end
{
    my($parser,$element)=@_;
    chdir "..";
}

sub handler_comment
{
    my($parser,$data)=@_;
}
