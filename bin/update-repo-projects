#!/bin/bash
. ~/.bashrc

if test "$RUNNING_IN_CRON" = true; then
    export DO_REPO_UPDATE=true
    (
        set -e
        cd ~/src/android
        if test -e .do-update -a ! -e .do-not-update; then
            repo-sync -n -j4
        fi
    )
    set -- `locate -b -r '^\.repo$'|grep src | grep -v ics-autobuild`
    echo will update: "$@"
else
    set -- . 
    echo will only update current dir: $PWD
fi



for x in $(for y in ~/src/android "$@"; do readlink -f $y; done|uniq-even-non-ajacent); do 
    cd $x || continue
    cd `lookup_file .repo/..` || continue

    (
        set -e
        flock 9
        test -d .repo

        if test -e .do-not-update; then
            exit 0;
        fi

        if test ! -e .do-update; then
            exit 0
        fi
        test -e Makefile || exit
        repo-sync -n -j4

        android-daily-changes

        mkdir -p out || mkdir -p $(readlink -m out)
        mv out/changes.log out/changes.log-backup-`today` || true
        repo-changes\? 2>&1|tee out/changes.log
        for x in `cat out/changes.log | perl -npe 's/.*?cd: (.*?):.*/$1/' | pn 1`; do 
	    if test ! -d $x; then
		touch ~/etc/generate-repo-info.mk;
		repo sync "$x" || true
		continue
	    fi
	    
            repo forall $x -c '
#{%sh%}
set -x
if test -n "$(git symbolic-ref HEAD)" -a -d .git/patches/$(basename $(git symbolic-ref HEAD))/ && 
    ! git-is-ancestor $(repo-remote)/$(repo-branch) HEAD; then
    gq push -a
    gq rebase $(repo-remote)/$(repo-branch)
else
    git rebase $(repo-remote)/$(repo-branch)
fi
#{%/sh%}
' || true
        done 2>&1|tee out/merge.log
        repo-changes\? || true

        { 
	    repo-changes\? $(cat out/changes.log | perl -npe 's/.*?cd: (.*?):.*/$1/' | pn 1) | grep . > out/changes.log.new && 
	    {
                echo some repos still has changes:;
                cat out/changes.log.new
            }
        } || 
        echo repo is up to date.

        flock -u 9
        rm .repo/out-*/ -rf
        if test $(stat -c %s .do-update) != 0; then
            for x in $(cat .do-update); do
                android-full-build $x || true
            done
        else
            android-full-build
        fi
        bhj-short-notify $(basename $0) "$(pwd): build completed"
    ) 9>.android-full-build.lock
done

if test "$RUNNING_IN_CRON" = true; then
    cron-code-reading
fi
