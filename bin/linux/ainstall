#!/bin/bash
. ~/.bashrc

build_env=`lookup_file build/envsetup.sh`
top_dir=`dirname $build_env`
top_dir=`readlink -f $top_dir/..`

if test -f $top_dir/TARGET_PRODUCT; then
    . $top_dir/TARGET_PRODUCT
fi

Android_mk=`lookup_file Android.mk`
install_bhj=`lookup_file install.bhj`
target_product=${TARGET_PRODUCT:-generic}

apk=`grep LOCAL_PACKAGE_NAME $Android_mk|awk '{print $3}'`

function ainstall() {

    if test x$apk != x; then
        File=`lookup_file out/target/product/$target_product/data/app/$apk.apk||true`
        if test ! -f "$File"; then #this line " is necessary, or else test will be confused
            File=`lookup_file out/target/product/$target_product/system/app/$apk.apk`
        fi
        echo $File
        anduninst
        if test ! -f "$File"; then
            echo 'Error: apk file is empty'
            exit -1
        fi
        adb install $File
        . apk_main_activity
        apk_main_activity
        if test "x$DO_START" = "xno"; then
            echo no start
        else
            adb shell am start  -a android.intent.action.MAIN -c android.intent.category.LAUNCHER -n $main_activity
        fi
    else
        exe=`grep 'LOCAL_MODULE\b' $Android_mk|perl -npe 's/.*=//g; s/\s*//g;'`
        File=`lookup_file out/target/product/$target_product/symbols/system/bin/$exe`
        if test ! -f "$File"; then
            echo 'Error: exe file is empty'
            exit -1
        fi
        adb push $File /data
        adb shell chmod 777 /data/`basename $File`
    fi
}

function apkwhich() {
    if test x$apk != x; then
                File=`lookup_file out/target/product/$target_product/data/app/$apk.apk||true`
        if test ! -f "$File"; then #this line " is necessary, or else test will be confused
            File=`lookup_file out/target/product/$target_product/system/app/$apk.apk`
        fi
        echo -n $File
    fi
}

`basename $0` "$@"
