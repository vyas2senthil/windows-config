#!/bin/bash

Filter=${Filter:-~/.my-beagle-filter-android}
cd -P . 
outDir=~/tmp/for-code-reading/"`pwd`"
srcDir=`pwd`
relativeSrcDir=.
while test "$outDir" != "" -a ! -d "$outDir"/.beagle; do
    outDir=${outDir%/*}
done

if test "$outDir" = "`readlink -f ~`"; then
    outDir=""
fi

if test "$outDir" != "" -a "$outDir" != ~/tmp/for-code-reading/"`pwd`";
then
    higherSrcDir=${outDir#~/tmp/for-code-reading/}

    if tty >/dev/null && test "$IN_EMACS" != true
    then
        read -p "Do you want update code reading for $higherSrcDir? (Y/n): " ans
    else
        ans=Y
    fi

    if test "$ans" = n -o "$ans" = N; then
        outDir=~/tmp/for-code-reading/"`pwd`"
    else
        DoUpDir=true
        relativeSrcDir=${srcDir/#$higherSrcDir/.}
        cd $higherSrcDir
    fi
else 
    outDir=~/tmp/for-code-reading/"`pwd`"
fi

function mkcscope_files() {
    if tty 1>&2 || test "$IN_CRON" = true || test "$IN_EMACS" = true; then
        find $relativeSrcDir \( '-path' '*/CVS' \
            '-o' '-path' '*/.svn' \
            '-o' '-path' '*/autom4te.cache' \
            '-o' '-path' '*/{arch}' \
            '-o' '-path' '*/.hg' \
            '-o' '-path' '*/_darcs' \
            '-o' '-path' '*/.git' \
            '-o' '-path' '*/.bzr' \
            '-o' '-path' '*~*' \
            '-o' '-path' '*#' \
            '-o' '-path' '*/TAGS' \
            '-o' '-path' '*/tags' \
            '-o' '-path' '*/semantic.cache' \
            '-o' '-iname' '*.o' \
            '-o' '-iname' '*.class' \
            '-o' '-iname' '*.obj' \
            '-o' '-iname' '*.pyc' \
            '-o' '-iname' '*.elc' \
            '-o' '-path' '*/.ignore' \
            '-o' '-path' '*/.repo' \
	    '-o' '-iname' '*.ncb' \
            '-o' '-iname' "cscope.files" \
            -o -iname "cscope.out" \
            -o -ipath "*/.beagle" \
            \) -prune -o -type f -print|$Filter | tee "$outDir"/cscope.files
    else
        cat
    fi
}

function _mk_help_dir() {
    mkdir -p "$outDir"
}

function mkgtags() {
    _mk_help_dir
    mkcscope_files | gtags --gtagslabel=plugin-example -f - "$@" "$outDir"
}

function mkgtags-filter() {
    gtags --gtagslabel=plugin-example -f - "$@" "$outDir"
}

function mkbeagleidx() {
    mkdir -p "$outDir"/.beagle

    beagle-build-index --recursive \
        --deny-directory-pattern `pwd`/outx \
        --enable-deletion \
        --target "$outDir"/.beagle/ \
        "$relativeSrcDir" 2>&1 \
        |tee -a "$outDir"/.beagle-build-log

    cat "$outDir"/.beagle-build-log |grep "No filter for" \
        |sort -u > "$outDir"/.beagle-build-log2

    mv "$outDir"/.beagle-build-log2 "$outDir"/.beagle-build-log

    ln $Filter "$outDir"/.beagle-filter -sf
}

function for-code-reading() {
    mkbeagleidx "$@"&
    mkgtags "$@" #must not put background, the tty(1) depends on this
}

`basename $0` "$@"
