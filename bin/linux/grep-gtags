#!/usr/bin/env perl

use Getopt::Long;
use strict;
use String::ShellQuote;

open(my $log, ">>", glob("~/.beagle-grep.log")) or die "Error openning log";
print $log "$0 @ARGV in " . $ENV{PWD} . "\n";

print "$0 ";

my @ARGV_save = @ARGV;
foreach my $x (@ARGV) {
    $x = shell_quote($x);
    print "$x ";
}
print "\n";


#gtags-cscope-grep regexp

my $pwd;


chomp($pwd = $ENV{PWD});

$pwd = "$ENV{HOME}/tmp/for-code-reading$pwd";
our $approx_dir = $pwd;

while ( not -f "$pwd/GTAGS" and not "$pwd" eq "/") {
    chomp($pwd = `dirname "$pwd"`);
}

if ($pwd eq "/" or $pwd eq glob("~")) {
    chomp($pwd = `readlink ~/.gtags-dir`);
    print "pwd is read from ~/.gtags-dir at $pwd\n";
	
} else {
    system("rm", "-f", glob("~/.gtags_dir"));
    system("ln", '-sf', $pwd, glob("~/.gtags-dir"));
}

$approx_dir = substr($approx_dir, length($pwd));

my $lookup_type = 1;
my $lookup_needle = "hello_world";
my $lookup_restrict_regexp;

GetOptions(
    "e=s" => \$lookup_needle,
    );

sub do_cscope($$$$) {
    my ($pwd, $lookup_type, $lookup_needle, $lookup_restrict_regexp) = @_;
    chdir ($pwd) or die "Error chdir $pwd";
    my $gtags_dir = $pwd;
    my $code_dir = substr($pwd, length("$ENV{HOME}/tmp/for-code-reading"));
    $code_dir =~ s,/+,/,g;
    open(my $grep, "-|", "echo $lookup_type$lookup_needle|gtags-cscope");

    my @matches;
    my %matches;

    while (<$grep>) {
        chomp();
        s/^>>.*//;
        my $file=$_;
        $file =~ s/ .*//;
        if (not -e "$code_dir/$file") {
            next;
        }
        if ($lookup_restrict_regexp && not m/$lookup_restrict_regexp/i) {
            next;
        }

	unless ($_ eq "") {
	    push @matches, $_;
	    m/(.*?) (.*?) (.*?) (.*)/;
	    $matches{$_} = [$1, $2, $3, $4];
	}
    }

    use String::Approx 'adistr';
    our $approx_dir;

    my $gpath_path = "$gtags_dir/GPATH";
    my %update_path;
    for (sort {adistr($matches{$b}->[0], $approx_dir) <=> adistr($matches{$a}->[0], $approx_dir)} @matches) {
	my ($file, $line, $str) = ($matches{$_}->[0], $matches{$_}->[2], $matches{$_}->[3]);
        print "$code_dir/$file:$line: $str\n" unless $str =~ m/^#undef/ or $file =~ m,external/kernel-headers,;
        
        $update_path{$file} = 1;
    }
    chdir ($code_dir) or die "Can not change to $code_dir";
    for (keys %update_path) {
        chomp(my $last_gtags_time = `gtags --dump $gpath_path:./$_`);
        chomp(my $last_modify_time = `stat -c %Y ./$_`);
        if ($last_modify_time > $last_gtags_time or not $last_gtags_time) {
            system("echo $_|gtags --gtagslabel=plugin-example -i -f - $gtags_dir");
        }
    }
}

do_cscope($pwd, $lookup_type, $lookup_needle, $lookup_restrict_regexp);
chdir ($pwd);
open(my $brothers, "<", ".beagle-brothers") or exit(0);
while(<$brothers>) {
    chomp;
    s,/.beagle$,,;
    my $pwd = $_;
    print "\n\n================\n\n";
    do_cscope($pwd, $lookup_type, $lookup_needle, $lookup_restrict_regexp);
}
