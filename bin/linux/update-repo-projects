#!/bin/bash
. ~/.bashrc

if test $(basename $0) != update-repo-projects -a $# == 0 || tty >/dev/null 2>&1 ; then
    set -- . 
    echo will only update current dir.
fi

if test $# == 0; then
    set -- `locate -b -r '^\.repo$'|grep src | grep -v ics-autobuild`
fi

echo will update: "$@"
for x in "$@"; do 
    cd $x || continue
    cd `lookup_file .repo/..` || continue

    (
        set -e
        flock 9
        test -d .repo

        if pwd | grep rollback -q; then
            exit 0
        fi
        if test -e .no-update; then
            exit 0
        fi
        test -e Makefile || exit
	if yes-or-no-p -y "do repo sync?"; then
            repo sync -n -j4
	fi

        android-daily-changes

        mkdir -p out
        mv out/changes.log out/changes.log-backup-`today` || true
        repo-changes\? 2>&1|tee out/changes.log
        for x in `cat out/changes.log | perl -npe 's/.*?cd: (.*?):.*/$1/' | pn 1`; do 
	    if test ! -d $x; then
		touch ~/etc/generate-repo-info.mk;
		repo sync "$x" || true
		continue
	    fi
	    
	    if test $(basename $0) = bpe-local-build; then
		(
		    patchdir=$(readlink -m out)/../code-backup/$x/$(now)
		    mkdir -p "$patchdir"
		    cd $x
		    file=$patchdir/head-$(git rev-parse HEAD)
		    touch "$file"
		    git add .
		    git commit -m 'backup for autobuild'
		    git format-patch HEAD^ -o $patchdir
		    git reset --hard $(repo-remote)/$(repo-branch)
		)
		continue
	    fi
            repo forall $x -c '
#{%sh%}
set -x
if test -n "$(git symbolic-ref HEAD)" -a -d .git/patches/$(basename $(git symbolic-ref HEAD))/ && 
    ! git-is-ancestor $(repo-remote)/$(repo-branch) HEAD; then
    gq push -a
    gq rebase $(repo-remote)/$(repo-branch)
else
    git rebase $(repo-remote)/$(repo-branch)
fi
#{%/sh%}
' || true
        done 2>&1|tee out/merge.log

        { 
	    repo-changes\? $(cat out/changes.log | perl -npe 's/.*?cd: (.*?):.*/$1/' | pn 1) | grep . > out/changes.log.new && 
	    {
                echo some repos still has changes:;
                cat out/changes.log.new
            }
        } || 
        echo repo is up to date.

	if test $(basename $0) = bpe-local-build; then
	    bpe-update -r
	fi
        if yes-or-no -y "Start full build?"; then
            flock -u 9
            android-full-build
            bhj-short-notify $(basename $0) "$(pwd): build completed"
        fi
    ) 9>.android-full-build.lock
done

if test $# != 1; then
    ~/bin/linux/cron-code-reading
fi
