#!/bin/bash
function calc_relative() {
    local source=$(formal-path "$1")
    local target=$2
    if test -f "$target"; then
        target=${target%/*}/
    fi
    if test "$source" = "$(readlink -m "$target")"; then
        echo .
        exit 0
    fi

    perl -e '
($s, $t)  = @ARGV;
@s = split("", $s);
@t = split("", $t);

$n = 0;
$last_slash = 0;
while (@s and @t) {
    if ($s[0] eq $t[0]) {
        $n ++;
        $last_slash = $n if $s[0] eq "/";
        shift @s;
        shift @t;
    } else {
        last;
    }
}

sub debug(@) {
    print STDERR "@_\n";
}

debug "last_slash is $last_slash";

if ($last_slash == 1) { #we should use abspath as they have no common components
    print $s;
    exit 0;
}
$relative_s = substr($s, $last_slash);
$remaining_t = substr($t, $last_slash);

$remaining_t = grep(m:/:, split("", $remaining_t));
$relative_s = "../" x $remaining_t . $relative_s;
print "$relative_s";
' "$source" "$target" 2>~/.logs/relative-path.log
}

if test "$(basename "$BASH_SOURCE")" = "$(basename "$0")"; then
   calc_relative "$(formal-path "$1")" "$(formal-path "$2")"
fi
