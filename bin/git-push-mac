#!/bin/bash
set -ex

test "$(pwd)" = $HOME && cd ~/windows-config
cd "$(dirname "$(lookup_file .git)")"

test "$(git config remote.origin.url | cut -b 1-5)" = https && exit 0

if git submodule foreach 'bash -c "git-push-mac || echo hello $(pwd) failed&"' | tee /dev/stderr | grep "^hello.*failed$";
then
    exit -1
else
    true
fi

git add . 

while test "$(git log --pretty=oneline -1 | cut -b 42-)" = mf; do
    git reset --soft HEAD^
done

if git diff --quiet HEAD && git branch --contains HEAD -a |grep -q from-mac; then
    echo HEAD already containd in a remote branch, no need to push
    exit
fi

if git st -s | grep . ; then
    git commit -m "$(
	(
	    echo "###start of comment###"
	    echo in $(pwd):
	    git diff HEAD | perl -npe 's,^diff --git ,* ,'
	    LOCAL=Local
	    cat <<EOF
# $LOCAL Variables: #
# mode:org #
# End: #
EOF
	) | get-stdin
    )" ||true
fi

rb=$(from-mac)
if git branch --contains HEAD -a |grep -q from-mac; then 
    echo HEAD already containd in a remote branch, no need to push
    exit
fi
if echo "$(git config remote.origin.url | cut -b 1-4)" | grep -P -e 'git[:@]' -q; then
    git remote rm origin-w >/dev/null 2>&1 || true
    git remote add origin-w $(git config remote.origin.url | perl -npe 's,^git(://|@)github.com(/|:)(.*?)/,https://$3\@github.com/$3/,') 2>/dev/null || true
    git push origin-w HEAD:$rb
    git fetch origin
else
    git push origin HEAD:$rb
fi

if test $(pwd) = ~/windows-config; then
    git-notify-push
fi
