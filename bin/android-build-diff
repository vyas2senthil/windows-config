#!/usr/bin/env perl

use strict;
my $f1 = shift @ARGV;
my $f2 = shift @ARGV;

my %f1;
my %f2;

open(my $F1, "-|", "xmlstarlet sel -t -m //project -v \@path -o '=' -v \@revision -n $f1") or die "Error opening $f1\n";

while (<$F1>) {
    next unless m/^(.*?)\s*=\s*(.*)\s*$/;
    $f1{$1} = $2;
}
close $F1;

open(my $F2, "-|", "xmlstarlet sel -t -m //project -v \@path -o '=' -v \@revision -n $f2") or die "Error opening $f2\n";
while (<$F2>) {
    next unless m/^(.*?)\s*=\s*(.*)\s*$/;
    $f2{$1} = $2;
}
close $F2;

for my $x1 (keys %f1) {
    if ($f1{$x1} eq $f2{$x1}) {
        delete $f2{$x1};
        next;
    }
    if (exists($f2{$x1})) {
        chomp(my $rev1 = qx(xmlstarlet sel -t -m //project -i "\@path='$x1'" -v \@revision $f1));
        chomp(my $rev2 = qx(xmlstarlet sel -t -m //project -i "\@path='$x1'" -v \@revision $f2));
        if ($rev1) {
            $rev1 = "revision=\"$rev1\"";
        }

        if ($rev2) {
            $rev2 = "revision=\"$rev2\"";
        }
        printf('(cd "%s" && export r1="%s" && export r2="%s" && bash)' . "\n", $x1, $f1{$x1}, $f2{$x1});
    } else {
        chomp(my $rev1 = qx(xmlstarlet sel -t -m //project -i "\@path='$x1'" -v \@revision $f1));
        if ($rev1) {
            $rev1 = " revision=\"$rev1\"";
        }
        printf('1: <project path="%s" name="%s"%s />' . "\n", $x1, $f1{$x1}, $rev1);
    }
    delete $f2{$x1};
}

for my $x2 (keys %f2) {
    chomp(my $rev2 = qx(xmlstarlet sel -t -m //project -i "\@path='$x2'" -v \@revision $f2));
    if ($rev2) {
        $rev2 = "revision=\"$rev2\"";
    }

    printf('2: <project path="%s" name="%s"%s />' . "\n", $x2, $f2{$x2}, $rev2);
}
