#!/bin/bash

set -e

function die() {
    echo "$@"
    exit -1
}

cd $(lookup_file .repo/..)
start_hour=${start_hour-$(date +%_H)}
test -d .repo || die ".repo not found, not android source directory?"

rm .repo/.need_rebuild -f

if test "$DO_NOT_GQ_REBASE" = true; then
    hourly_log=hourly-build-without-rebase.log
else
    hourly_log=hourly-build.log
fi

if test -e $hourly_log; then
    mv $hourly_log $hourly_log.$((start_hour - 1))
fi

exec 9>.android-full-build.lock
flock 9

(
    diff .local_refs.txt .remote_refs.txt || true
    echo hourly build start hours is $start_hour
    set -x
    rm -f .build-started
    if yes-or-no-p -y "Do sync?"; then
        if test "$DO_NOT_GQ_REBASE" = true; then
            # only need reset those local patch rebased
            my-rfa '
                if test -e $ANDROID_TOP/flashing/quilt/$(repo-tracking)/$(repo-path)/series; then
                    git reset --hard $(repo-remote-branch)
                    git clean -xfd
                fi
            '
        else
            my-rfa 'git reset --hard; git clean -xfd' || true
            if test "$LOCAL_SYNC" = true; then
                repo sync -j4 -d -l
            else
                repo-sync -j4 -d 
            fi || die "Error: repo sync failed" | tee build.log
        fi

        if test ! -e .do_not_gq_rebase -a "$DO_NOT_GQ_REBASE" != true; then
            {
                bpe-update -r
                my-rfa '
                    if test -e $ANDROID_TOP/flashing/quilt/$(repo-tracking)/$(repo-path)/series && gq next | grep -q .; then
                        echo Error: $(pwd) guilt not cleanly applied
                    fi
                ' | grep . && export DO_NOT_GQ_REBASE=true
            } > build.log-rebase

            if test "$DO_NOT_GQ_REBASE" = true; then
                flock -u 9
                android-hourly-build "$@" || true
                rm daily-changes/* -rf
                mv build.log-rebase build.log
                die "Error: guilt rebase not cleanly applied; need bail out."
            fi
        fi
            
    fi
    
    touch .build-started
    flock -u 9
    if test "$DO_NOT_GQ_REBASE" = true; then
        android-full-build "$@" || die "android-full-build failed"
    else
        if ! android-full-build "$@"; then
            mv build.log build.log-rebased
            (
                export DO_NOT_GQ_REBASE=true
                android-hourly-build "$@" || true
            )
            mv build.log-rebased build.log
            if test .build_ok; then
                rm .build_ok
                die "Error: build failed with rebase enabled, but succeeds when disabled"
            else
                rm .build-started
                touch .rebased_build_failed
                die "Error: build failed with rebase enabled or disabled"
            fi            
        fi
    fi
    rm .rebased_build_failed -f
    touch .build_ok
    rm .build_failed -fr
) > $hourly_log 2>&1 || (

    daily_change_dir=daily-changes/$(basename $0).$$
    rm -rf ${daily_change_dir}

    build_started=yes
    if test ! -e .build-started; then # build has not started, why?
        build_started=no
        if test -e .rebased_build_failed; then
            build_started=rebased
        fi
        mkdir -p $(pwd)/$daily_change_dir
        cp $hourly_log build.log
    else
        android-daily-changes -f "$(now-rfc -d '1 hour ago'|perl -npe 's/( \d+):\d+:/$1:00:/')" -d $(pwd)/$daily_change_dir
    fi

    if test -z "$REMOTEIP"; then
        export REMOTEIP=10.21.130.154
    fi
    
    last_time_build_ok=no

    if test -e .build_ok; then
        rm .build_ok
        last_time_build_ok=yes
    fi
    tar cz $daily_change_dir build.log $hourly_log | 
    gerrit-review-mail-it \
        build-failed \
        last_time_build_ok=$last_time_build_ok \
        build_started=$build_started "$@" || 
    true
    rm $daily_change_dir -rf

)
