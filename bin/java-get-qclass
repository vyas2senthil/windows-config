#!/usr/bin/perl

use strict;
die "Error: Usage $0 class" unless @ARGV;
open(my $debug, ">", glob("~/.logs/java-get-qclass.log"))
    or die "Can not open debug log file ~/.logs/java-get-qclass.log";
sub debug(@) {
    print $debug "@_\n";
}

use Getopt::Long;
my $type = "class|interface";
GetOptions(
    "t=s" => \$type,
    );


my %files_package;
for (@ARGV) {
    my $qclass = my $class = $_;
    if ($class =~ m/\./) {
	$class =~ s/.*\.//;
    }
    
    my $output;

    if ($ENV{GTAGS_START_FILE}) {
	my $file = $ENV{GTAGS_START_FILE};
	$output = qx(grep-imenu -e $class -t '$type' -s -p "\.java|\.aidl|\.jar|\.cs|\.dll" -f $file);
	debug "output is $output from $file";
    } else {
	$output = qx(grep-gtags -e $class -t '$type' -s -p "\.java|\.aidl|\.jar|\.cs|\.dll");
	debug "output is $output from gtags";
    }

    while ($output =~ m/^(.*?):.*?: <(.*?)>/mg) {
	my ($file, $tag) = ($1, $2);
	if ($tag eq $qclass and $qclass =~ /\./) {
	    print $tag;
	    debug "already a qclass: $tag";
	    exit;
	}
	my $package = $files_package{$file};
	unless ($package) {
	    chomp ($package = qx(java-get-package $file));
	    debug "package is $package from $file";
	    $files_package{$file} = $package;
	}
	print "$package$tag\n" if "$package$tag" =~ m/$qclass/;
    }
}
