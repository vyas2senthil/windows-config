#!/bin/bash
set -e

# Local Variables: #
# mode: sh #
# End: #


function add-jira-comment() {
    if test -z "$issue"; then
        issue=`git log -1|grep Issue: |perl -npe 's/.*: //'`
    fi
    if test $# = 0; then
        set -- git commit --amend
    fi
    (echo "$@": In repo: `repo forall . -c 'echo $REPO_PATH'`; echo; git log -1)|jira-add-comment $issue
}

if test "`basename $0`" = add-jira-comment; then
    add-jira-comment "$@"
    exit
fi

die() {
    echo "$@"
    false
}

function Usage() {
    echo "$(basename $0) [-i ISSUE] [-a] [-h]"
    echo ""
    echo "    -i ISSUE: ISSUE is the jira issue id."
    echo "    -a: it is passed to git commit"
    echo "    -h: show this help."
}

issue=
git_opts=
git_amend=
TEMP=$(getopt -o i:ahs --long amend -n $(basename $0) -- "$@")
eval set -- "$TEMP"
while true; do
    case "$1" in
	-i)
	    issue="${2%:*}"
	    shift 2
	    ;;
	-a)
	    git_opts="$git_opts -a"
	    shift
	    ;;
	--amend)
	    git_opts="$git_opts --amend"
	    git_amend=true
	    shift
	    ;;	    
	-h)
	    Usage
	    exit
	    ;;
	--)
	    shift
	    break
	    ;;
	-s)
            shift
            break
            ;;
	*)
	    die "internal error"
	    ;;
    esac
done

msg=/tmp/gitci-msg.$$
(
    echo ""
    echo ""

    if test -n "$issue"; then
	echo "Issue: $issue"
    fi

    if test -n "$signed_off_by"; then
	echo "$signed_off_by"
    fi

    echo "###start of comment###"
    echo in $(pwd):
    git diff HEAD | perl -npe 's,^diff --git ,* ,'
    cat <<EOF
# Local Variables: #
# mode:org #
# End: #
EOF
) > $msg

reviewers=()
while test $# -gt 0; do 
    reviewers=("${reviewers[@]}" "$(echo "${1%@*}"|perl -npe 's/.*<//')")
    shift
done

function gitci() {
    if test -z "$git_amend"; then
	git commit $git_opts -s -m "$(cat <<EOF
`get-stdin "$msg"`
EOF
)"
    else
	git commit $git_opts
    fi

    if test -n "$issue"; then
	add-jira-comment git commit
    fi

    review_host=$(xmlstarlet sel -B -t -m //default -v @review -b \
	$(lookup-file .repo/manifest.xml 2>/dev/null || echo /dev/null) 2>/dev/null |
	perl -npe 's,^http.?://,,')

    if test -n "$review_host" && yes-or-no-p -y "Push for review?"; then
	set -x
        git push --receive-pack="$(
            echo -n 'git receive-pack ';
            for x in "${reviewers[@]}"; do
                echo -n "--reviewer=$x "
            done)" \
            "$(repo-review-url)" HEAD:refs/for/$(repo-refname)
        (
            cd $(lookup-file .git/..)
            if test -e .gerrit-hooks; then
                bash .gerrit-hooks push-for-review
            fi
        )
    fi
}

`basename $0` "$@"
if test -z "$DEBUG"; then rm $msg; fi

