#!/bin/bash

if test $(basename $0) = build-beagrep-debs; then
    cd ~/gcode/beagrep
    for branch in $(git branch -a |grep -v remotes|sed 's/^\*/ /'|grep for); do
        for arch in i386 amd64; do
            (
                if test $# != 0; then
                    do_build=false
                    for m in "$@"; do
                        if echo $branch-$arch | grep -q -e $m; then
                            do_build=true
                            break
                        fi
                    done
                    if test $do_build = false; then
                        exit
                    fi
                fi
                pkg=~/external/cowbuilder/${branch#for-}-$arch/beagrep-build/base.cow
                if test ! -e $pkg; then
                    ADDITIONAL_BUILD_BEAGREP_DEBS_ARGS=
                    pkg=~/external/cowbuilder/${branch#for-}-$arch/bare/base.cow
                fi
                if test -e $pkg; then
                    rm -rf ~/tmp/beagrep-debs/$branch-$arch
                    mkdir -p ~/tmp/beagrep-debs/$branch-$arch
                    mkdir ~/tmp/build -p
                    builddir=~/tmp/build
                    time sudo unshare -m -- bash -c "
                        mount -o size=2000000k -t tmpfs none $builddir
                        echo copying base files...
                        time cp $pkg $builddir -a
                        echo done
                        set -x
                        command sudo cowbuilder --execute --basepath $builddir/$(basename $pkg) \
                            --buildplace $builddir/ \
                            --bindmounts \"$(readlink -f $HOME/windows-config) $(readlink -f $HOME/tmp/beagrep-debs)\" $ADDITIONAL_BUILD_BEAGREP_DEBS_ARGS -- \
                            $(which do-beagrep-build) \
                            $branch \
                            $HOME \
                            $UID \
                            $(today) \
                            $(git log --pretty=format:%h -1 $branch) \
                            $arch
                        echo copying back base files...
                        cp $builddir/$(basename $pkg) $(dirname $pkg) -a
                        echo done
                    "
                fi
            )
        done
    done 2>&1 | grep --line-buffered -i -v 'create hard link.*invalid cross-device link' | bash -c "time tee  ~/.logs/$(basename $0).log"
    exit
fi

set -ex
export branch=$1
export myhome=$2
export myuid=$3
export today=$4
export hash=$5
export arch=$6
export bldir=~/$$
(
    mkdir -p $bldir
    cd $myhome/windows-config/gcode/beagrep
    which git || apt-get install -y git-core || true
    which dpkg-depcheck || apt-get -y install devscripts || true
    which dh_autoreconf || apt-get -y install dh-autoreconf || {
        if [[ $branch =~ ubuntu- ]] && ! grep backports /etc/apt/sources.list; then
            dist=${branch#for-ubuntu-};
            perl -npe 'if (m/'$dist'/) {$back = $_; $back =~ s/'$dist'/'$dist'-backports/; print $back}' -i /etc/apt/sources.list
        fi
        apt-get update
        apt-get install dh-autoreconf
    } || true
    which vim || apt-get -y install vim || true

    (
        cd /usr/share/devscripts/Devscripts/
        if grep 'no path found matching pattern' Packages.pm; then
            cp /usr/share/devscripts/Devscripts/Packages.pm $myhome/tmp/beagrep-debs/$branch.pm;
        fi
        if test -e $myhome/tmp/beagrep-debs/$branch.pm; then
            cp $myhome/tmp/beagrep-debs/$branch.pm /usr/share/devscripts/Devscripts/Packages.pm;
        else
            
            echo 'in /usr/share/devscripts/Devscripts/Packages.pm, search for not found, and add:
	    elsif ($line =~ /^dpkg-query: no path found matching pattern \Q$curfile\E\.$/) {
		last;
	    }
'
            echo "after you update the .pm, you can:
            cp /usr/share/devscripts/Devscripts/Packages.pm $myhome/tmp/beagrep-debs/$branch.pm
"
            bash
        fi
    )
    which strace || apt-get install -y strace || true
    git archive --format=tar -o $bldir/beagrep_0.4.0.orig.tar $branch
    cd $bldir
    gzip beagrep_0.4.0.orig.tar
    mkdir beagrep
    cd beagrep
    tar zxf ../beagrep_0.4.0.orig.tar.gz
    which gmcs || apt-get install -y $(cat debian/control | perl -ne 'print if m/Build-Depends/..m/Standards-Version/'|grep -v -e Build-Depends:\\\|Standards-Version|perl -npe 's/,/ /g')

    # for clear error messages
    autoreconf -i
    dpkg-depcheck -l -a -m bash -c './configure; make -j8; true' 2>&1 | tee $myhome/tmp/beagrep-debs/$branch-$arch/make.dep
    make install
    apt-get install -y $(cat debian/control | perl -ne 'print if m/^Depends/..m/^Descr/'|grep -v -e Depends:\\\|Description|perl -npe 's/,/ /g')
    dpkg-depcheck -l -a -m bash -c '(
        export PATH=/usr/local/bin:/usr/local/sbin:$PATH
        mkdir tmp
        cd tmp
        echo main > 1.txt
        mkbeagrepidx
        beagrep -e "main" | grep "1.txt:1:main" || exit -1
    )' 2>&1 | tee $myhome/tmp/beagrep-debs/$branch-$arch/beagrep.dep

    # do it again
    cd ..
    rm beagrep -rf
    mkdir beagrep
    cd beagrep
    tar zxf ../beagrep_0.4.0.orig.tar.gz
    dpkg-buildpackage || true
    cd ..
    test -e *.deb || exit -1
    mv *.deb beagrep-$branch-$arch-$today-$hash.deb
    dpkg -i beagrep-$branch-$arch-$today-$hash.deb
    apt-get -f install -y
    apt-get remove -y beagrep

    cp -a * $myhome/tmp/beagrep-debs/$branch-$arch
    cd $myhome/tmp/beagrep-debs/$branch-$arch
    export PATH=$myhome/windows-config/bin:$PATH 
    (
        diff-arg1-arg2 "$(cat beagrep/debian/control | perl -ne 'print if m/Build-Depends/..m/Standards-Version/'|grep -v -e Build-Depends:\\\|Standards-Version|perl -npe 's/,/ /g')" \
            "$(cat make.dep | perl -ne 'print if m/^Packages needed:/..m/^$/'|grep -v 'Packages needed'|sed -e 's/:.*//')" |
        tee make.diff

        diff-arg1-arg2 "$(cat beagrep/debian/control | perl -ne 'print if m/^Depends/..m/^Descr/'|grep -v -e Depends:\\\|Description|perl -npe 's/,/ /g')" \
            "$(cat beagrep.dep | perl -ne 'print if m/^Packages needed:/..m/^$/'|grep -v 'Packages needed'|sed -e 's/:.*//')" |
        tee beagrep.diff
    ) || true
    chown -R $myuid $myhome/tmp/beagrep-debs/$branch-$arch
    cd ~
    rm $bldir -rf
) || (
    echo "build failed, please check it in the shell"
    bash || true
    rm $bldir -rf
)
