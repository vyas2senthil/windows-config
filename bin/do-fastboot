#!/bin/bash

set -e
test -e system.img || cd $(lookup_file flashing)
function die() {
    echo "$@"
    exit -1
}

if test $# -lt 1; then
    die "Usage: $(basename $0) partitions..."
fi


export partitions=("$@")
function do-partition() {
    local user_arg=false
    for x in "${partitions[@]}"; do
	if test "$1" = "$x"; then
	    user_arg=true
	    break
	fi
    done

    if test $user_arg = false; then
	return
    fi

    fastboot erase $1;
    if test $1 = system; then
	fastboot oem onfly system;
	fastboot erase userdata
    fi
    fastboot flash $1 ${2:-$1.img}
}

function get-image-path() {
    get-blf-img-val $blf $1 Path
}

# ramdisk           =                                       , start:        1M, size:      256K, end:        0B
do-partition ramdisk "$(get-image-path RAMD)"
# imei              =                                       , start:    1M256K, size:      256K, end:        0B
# arbelbinary       =                                       , start:    1M512K, size:        7M, end:        0B
do-partition arbelbinary "$(get-image-path ARBI)"
# msabinary         =                                       , start:    8M512K, size:        1M, end:        0B
do-partition msabinary "$(get-image-path GRBI)"
# kernel            =                                       , start:    9M512K, size:        4M, end:        0B
do-partition kernel "$(get-image-path ZIMG)"
# maintenance       =                                       , start:   13M512K, size:        4M, end:        0B
do-partition maintenance "$(get-image-path MNTN)"
# recovery          =                                       , start:   17M512K, size:        5M, end:        0B
do-partition recovery "$(get-image-path RCOV)"
# misc              =                                       , start:   22M512K, size:      256K, end:        0B
fastboot erase misc
# cache             =                                       , start:   22M768K, size:   81M256K, end:        0B
fastboot erase cache
# system            =                                       , start:      104M, size:      160M, end:        0B
do-partition system "$(get-image-path SYSY)"
# userdata          =                                       , start:      264M, size:      216M, end:        0B
do-partition userdata "$(get-image-path USRY)"
# logo              =                                       , start:      480M, size:    3M256K, end:        0B
do-partition logo "$(get-image-path PLGO)"
# env               =                                       , start:  483M256K, size:      512K, end:        0B
# kpanic            =                                       , start:  483M768K, size:      256K, end:        0B
# nvm               =                                       , start:      484M, size:        8M, end:        0B
fastboot erase nvm
# telephony         =                                       , start:      492M, size:        8M, end:        0B
do-partition telephony "$(get-image-path PXAY)"
# reserved          =                                       , start:      500M, size:       12M, end:        0B

read -p "Press enter to restart fastboot "
fastboot reboot
